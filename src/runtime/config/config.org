#+TITLE: Configuration
#+AUTHOR: VLEAD
#+DATE: [2016-08-31 Wed]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction

This holds the application's configuration parameters.


* Questions
  The set of questions and meta data about questions like type of a question -
  whether it is a =textbox= or a =radiobutton= or a =checkbox= along with the
  options that a user can select for each question are captured as key value
  pairs.  This information is rendered on the client dynamically when a
  feedback form is requested. 
#+NAME: questions_config
#+BEGIN_SRC python

questions_dict = {'questions': [
        {'No' : '1', 'name':'Did you do the experiment?', 'type':'radio',
                  'options':['Yes', 'No']},
        {'No' : '2', 'name':'Did the experiment work?', 'type':'radio',
                  'options': ['Yes', 'No']},
        {'No' : '3','name': 'Did you find any bugs in the experiment?', 'type': 'radio',
              'options': ["Yes", "No"]},
        {'No' : '4','name': 'How much did you know about the experiment before doing it in Virtual Labs?', 'type': 'radio',
              'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
        {'No' : '5','name': 'Is this experiment part of your curriculum?', 'type': 'radio',
              'options': ["Yes", "No"]},
        {'No' : '6','name': 'Does this help you to perform better in the curriculum?', 'type': 'radio',
              'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
        {'No' : '7','name': 'If you had to do this experiment physically do you think this experiment prepares to do it better physically?', 'type': 'radio',
              'options': ["Yes", "No"]},
        {'No' : '8','name': 'Would you recommend it to your fellow students?', 'type': 'radio',
              'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
        {'No' : '9','name': 'Additional Comments', 'type': 'text',
              'options': ["Yes"]}
        ]}


#+END_SRC


* Flask Application Configuration
  Configuration for the flask application. 
#+NAME: flask_app_config
#+BEGIN_SRC python
# DB URI
# example DB URI:
# mysql+oursql://scott:tiger@localhost/mydatabase
# postgresql+psycopg2://scott:tiger@localhost/mydatabase
SQLALCHEMY_DATABASE_URI = 'mysql+oursql://<userid>:<password>@<servername>/<db_name>'
# example
# SQLALCHEMY_DATABASE_URI = 'mysql+oursql://root:root@localhost/feedback'

# Debug from SQLAlchemy
# Turn this to False on production
SQLALCHEMY_ECHO = False
SQLALCHEMY_TRACK_MODIFICATIONS = True

# List of allowed origins for CORS
ALLOWED_ORIGINS = "['*']"

# List of allowed IPs
WHITELIST_IPS = ["127.0.0.1"]

# Configure your log paths
LOG_FILE_DIRECTORY = 'logs'
LOG_FILE = 'feedback.log'

# Log level for the application
#10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR, 50=CRITICAL",
LOG_LEVEL = 10

#+END_SRC


* System Config
#+NAME: system_config
#+BEGIN_SRC python
#Fill the value during deployment.  Generate the key. 
KEY="defaultkey"

#+END_SRC


* Tangling                                                      :boilerplate:
** questions_config
#+BEGIN_SRC python :tangle questions_config.py :eval no :noweb yes
<<questions_config>>
#+end_src


** flask_app_config
#+BEGIN_SRC python :tangle flask_app_config.py :eval no :noweb yes
<<flask_app_config>>
#+end_src


** system_config
#+BEGIN_SRC python :tangle system_config.py :eval no :noweb yes
<<system_config>>
#+end_src
