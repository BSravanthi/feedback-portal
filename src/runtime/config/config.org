#+TITLE: Configuration
#+AUTHOR: VLEAD
#+DATE: [2016-08-31 Wed]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction

This holds the application's configuration parameters.


* Feedback Forms
  The feedback service can work with multiple feedback forms.  The set of
  questions and meta data about questions like type of a question - whether it
  is a =textbox= or a =radiobutton= or a =checkbox= along with the options that
  a user can select for each question are captured as key value pairs.  This
  information is rendered on the client dynamically when a feedback form is
  requested.
#+NAME: feedback_forms
#+BEGIN_SRC python
  feedback_forms = [
      {'version': 'open-edx-virtual-labs-v2.0',
       'questions': [
           {'name':'1. Did you do the experiment?', 'type':'radio',
            'options':['Yes', 'No']},
           {'name':'2. Did the experiment work?', 'type':'radio',
            'options': ['Yes', 'No']},
           {'name': '3. How much did you know about the experiment before doing it in Virtual Labs?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '4. Is this experiment part of your curriculum?', 'type': 'radio',
            'options': ["Don't know", "Not applicable"]},
           {'name': '5. Did this experiment help you understand the concept better?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '6. Will you recommend this experiment to others?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '7. Did you find any bugs in the experiment?', 'type': 'radio',
            'options': ["Yes", "No"]},
           {'name': 'Please provide any other feedback about this experiment?', 'type': 'text',
            'options': ["Yes"]}
       ]},    
      {'version': 'open-edx-virtual-labs-v2.0_for_lab',
       'questions': [
           {'name': '1. How much did you know about the lab?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '2. Is this lab part of your curriculum?', 'type': 'radio',
            'options': ["Don't know", "Not applicable"]},
           {'name': '3. Did this lab help you understand the concept better?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '4. Will you recommend this lab to others?', 'type': 'radio',
            'options': ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]},
           {'name': '5. Did you find any bugs in the lab?', 'type': 'radio',
            'options': ["Yes", "No"]},
           {'name': 'Please provide any other feedback about this lab?', 'type': 'text',
            'options': ["Yes"]}
  ]}]
    
#+END_SRC


* Flask Application Configuration
  Configuration for the flask application. 
#+NAME: flask_app_config
#+BEGIN_SRC python
# DB URI
# example DB URI:
# mysql+oursql://scott:tiger@localhost/mydatabase
# postgresql+psycopg2://scott:tiger@localhost/mydatabase
SQLALCHEMY_DATABASE_URI = 'mysql+oursql://<userid>:<password>@<servername>/<db_name>'
# example
# SQLALCHEMY_DATABASE_URI = 'mysql+oursql://root:root@localhost/feedback'

# Debug from SQLAlchemy
# Turn this to False on production
SQLALCHEMY_ECHO = False
SQLALCHEMY_TRACK_MODIFICATIONS = True

# List of allowed origins for CORS
ALLOWED_ORIGINS = "['*']"

# List of allowed IPs
WHITELIST_IPS = ["127.0.0.1"]

# Configure your log paths
LOG_FILE_DIRECTORY = 'logs'
LOG_FILE = 'feedback.log'

# Log level for the application
#10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR, 50=CRITICAL",
LOG_LEVEL = 10

#+END_SRC


* System Config
#+NAME: system_config
#+BEGIN_SRC python
#Fill the value during deployment.  Generate the key. 
KEY="defaultkey"

#+END_SRC


* Tangling                                                      :boilerplate:
** feedback_forms
#+BEGIN_SRC python :tangle feedback_forms.py :eval no :noweb yes
<<feedback_forms>>
#+end_src


** flask_app_config
#+BEGIN_SRC python :tangle flask_app_config.py :eval no :noweb yes
<<flask_app_config>>
#+end_src


** system_config
#+BEGIN_SRC python :tangle system_config.py :eval no :noweb yes
<<system_config>>
#+end_src
